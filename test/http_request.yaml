interval:
  - interval: 2s
    then:
      - http_request.get:
          url: http://   IP von Powermeter    /cm?cmnd=status%2010                   # IP Anpassen
          capture_response: true
          max_response_buffer_size: 4096
          on_response:
            then:
              - lambda: |-
                  json::parse_json(body, [](JsonObject root) -> bool {
                      id(powermeterrequest).publish_state(root["SML"]["Power_curr"].as< float >());
                      return true;
                  });

            #   wenn der Wert nicht stimmt schau mal nochmal
            #   http://   IP von Powermeter    /cm?cmnd=status%2010
            #   in deinem Browser eingeben und das richtigte suchen
            #   und in dem Lamda abstelle Power_curr das richtige eingeben

http_request:
  useragent: esphome/device
  timeout: 2s
  verify_ssl: false
  watchdog_timeout: 30s  # more as timeout
  
sensor:
  - platform: template
    name: "Power Meter HTTP Request"
    id: powermeterrequest
    update_interval: 1s
    state_class: "measurement"
    device_class: "energy_storage"
    unit_of_measurement: "Watt"

